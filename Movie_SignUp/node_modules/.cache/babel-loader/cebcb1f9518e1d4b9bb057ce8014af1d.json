{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/songjaehyeok/Desktop/github/react_Study/first/src/components/signUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport InputField from './inputField';\n\nconst SignUp = () => {\n  _s();\n\n  const [userId, setUserId] = useState(\"\");\n  const [userPassword, setUserPassword] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const [userMail, setUserMail] = useState(\"\");\n  const [errorId, setErrorId] = useState(\"아이디를 입력하세요\");\n  const [errorPassword, setErrorPassword] = useState(\"비밀번호를 입력하세요\");\n  const [errorName, setErrorName] = useState(\"이름을 입력하세요\");\n  const [errorMail, setErrorMail] = useState(\"이메일을 입력하세요\");\n\n  const onSubmit = () => {\n    console.log(userId, userPassword, userName, userMail);\n  };\n\n  const validateError = () => {\n    resetErrors();\n    let validated = true;\n\n    if (!movieTitle) {\n      setTitleError('영화제목을 입력해주세요.');\n      validated = false;\n    }\n\n    if (!movieYear) {\n      setYearError('개봉년도를 입력해주세요.');\n      validated = false;\n    }\n\n    return validated;\n  };\n\n  const resetError = () => {\n    setErrorId(\"\");\n    setErrorPassword(\"\");\n    setErrorName(\"\");\n    setErrorMail(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    action: \"#\",\n    className: \"signUpForm\",\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(InputField, {\n      className: \"signUpId\",\n      type: \"text\",\n      value: userId,\n      placeholder: \"\\uC544\\uC774\\uB514\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n      onChange: e => setUserId(e.target.value),\n      errorMassage: errorId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputField, {\n      className: \"signUpPw\",\n      type: \"text\",\n      value: userPassword,\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n      onChange: e => setUserPassword(e.target.value),\n      errorMassage: errorPassword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputField, {\n      className: \"signUpName\",\n      type: \"text\",\n      value: userName,\n      placeholder: \"\\uC774\\uB984\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n      onChange: e => setUserName(e.target.value),\n      errorMassage: errorName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputField, {\n      className: \"signUpMail\",\n      type: \"text\",\n      value: userMail,\n      placeholder: \"\\uC774\\uBA54\\uC77C\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n      onChange: e => setUserMail(e.target.value),\n      errorMassage: errorMail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignUp, \"hOHLC7AlgeotJeiHjLTfE8gV6yI=\");\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/songjaehyeok/Desktop/github/react_Study/first/src/components/signUp.js"],"names":["React","useState","InputField","SignUp","userId","setUserId","userPassword","setUserPassword","userName","setUserName","userMail","setUserMail","errorId","setErrorId","errorPassword","setErrorPassword","errorName","setErrorName","errorMail","setErrorMail","onSubmit","console","log","validateError","resetErrors","validated","movieTitle","setTitleError","movieYear","setYearError","resetError","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport InputField from './inputField';\n\nconst SignUp = () =>{\n\n    const [userId, setUserId] = useState(\"\");\n    const [userPassword, setUserPassword] = useState(\"\");\n    const [userName, setUserName] = useState(\"\");\n    const [userMail, setUserMail] = useState(\"\");\n    const [errorId, setErrorId] = useState(\"아이디를 입력하세요\");\n    const [errorPassword, setErrorPassword] = useState(\"비밀번호를 입력하세요\");\n    const [errorName, setErrorName] = useState(\"이름을 입력하세요\");\n    const [errorMail, setErrorMail] = useState(\"이메일을 입력하세요\");\n\n    const onSubmit = () =>{\n        console.log(userId, userPassword, userName, userMail);\n    };\n\n    const validateError = () => {\n        resetErrors();\n        let validated = true;\n        if(!movieTitle){\n          setTitleError('영화제목을 입력해주세요.')\n          validated = false;\n        }\n        if(!movieYear){\n          setYearError('개봉년도를 입력해주세요.')\n          validated = false;\n        }\n        return validated;\n    } \n\n    const resetError = () =>{\n        setErrorId(\"\");\n        setErrorPassword(\"\");\n        setErrorName(\"\");\n        setErrorMail(\"\");\n    };\n\n    return(\n        <form action=\"#\" className=\"signUpForm\" onSubmit={onSubmit}>\n            <InputField\n                className=\"signUpId\"\n                type=\"text\"\n                value={userId}\n                placeholder=\"아이디를 입력하세요.\"\n                onChange={e => setUserId(e.target.value)}\n                errorMassage={errorId}\n            />\n            <InputField\n                className=\"signUpPw\"\n                type=\"text\"\n                value={userPassword}\n                placeholder=\"비밀번호를 입력하세요.\"\n                onChange={e => setUserPassword(e.target.value)}\n                errorMassage={errorPassword}\n            />\n            <InputField\n                className=\"signUpName\"\n                type=\"text\"\n                value={userName}\n                placeholder=\"이름을 입력하세요.\"\n                onChange={e => setUserName(e.target.value)}\n                errorMassage={errorName}\n            />\n            <InputField\n                className=\"signUpMail\"\n                type=\"text\"\n                value={userMail}\n                placeholder=\"이메일을 입력하세요.\"\n                onChange={e => setUserMail(e.target.value)}\n                errorMassage={errorMail}\n            />\n            <button type=\"submit\">회원가입</button>\n        </form>\n    );\n}\n\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}